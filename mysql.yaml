---
- hosts: localhost
  connection: local
  become: yes
  become_user: root

  vars_files:
    - /tmp/vars.json

  pre_tasks:
  #  - name: "Add mysql 5.7 apt repository"
  #    apt_repository:
  #     repo: 'deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted'
  #     state: present
  #      update_cache: yes

    - name: "Install MySQL Server"    
      apt:
        name:
          - mysql-server
          - mysql-client
          - python3-mysqldb
          - unzip
          - net-tools
        state: present
        update_cache: yes  

    # This is a workaround for the MySQL Python library issue on Ubuntu 20.04 and above
    - name: Determine required MySQL Python libraries (Ubuntu Focal Fossa ++)
      set_fact:
          mysql_python_package_debian: "python3-pymysql"
      when:
          - mysql_python_package_debian is not defined
          - ansible_distribution == "Ubuntu"
          - ansible_distribution_major_version|int > 19
    
     name: Determine required MySQL Python libraries.
     set_fact:
        deb_mysql_python_package: "{% if 'python3' in ansible_python_interpreter|default('') %}python3-mysqldb{% else %}python-mysqldb{% endif %}"
        mysql_python_package_debian: "{% if 'python3' in ansible_python_interpreter|default('') %}python3-mysqldb{% else %}python-mysqldb{% endif %}"
      when:
        - mysql_python_package_debian is not defined
        - ansible_distribution != "Ubuntu"
        - ansible_distribution_major_version|int < 20

    - name : Install MySQL Python libraries
      apt:
        name: "python-mysqldb"
        state: present
        update_cache: yes


  tasks:
    - name: "Create MySQL config files"
      blockinfile:
        content: |
          [client]
          user=root
          password={{ db_password }}
          user=ocuser
          password={{ db_password }}
        dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"

    - name: "Bind MySQL socket to all interfaces"
      replace:  
        path: '/etc/mysql/mysql.conf.d/mysqld.cnf'
        regexp: '^\s*bind-address'
        replace: '#bind-address'

    - name: "Start and enable services"
      service: "name={{ item }} state=restarted enabled=yes"
      with_items:
        - mysql
    
    - name: "Create database user"
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "*.*:ALL"
        state: present

    - name: "Flush database privileges"
      command: "mysql -e \"update mysql.user set host = '%' where user = 'ocuser'; flush privileges;\""

    - name: "Create database"
      mysql_db:
        name: "opencart"
        state: present
        login_user: root
        login_password: "{{ db_password }}"